#!/bin/bash
set -e

opt_source_dir="$1"
opt_dest_dir="$2"
opt_work_dir=${3:-/var/tmp/clonebak}

function usage {
    echo Usage: $(basename $0) sourcedir destdir "[workdir]" 1>&2
    echo "" 1>&2
    cat <<"EEEEEE" 1>&2
    sourcedir: a directory containing git repositories
    destdir:   destination for tar and gzipped clones
    workdir:   working directory (default: /var/tmp/clonebak)
EEEEEE
    exit 1
}

function die {
    code=$1
    shift
    echo $* 1>&2
    exit $code
}

test -z "$opt_source_dir" && usage
test -z "$opt_dest_dir" && usage
test -z "$opt_work_dir" && usage

ts=$(date '+%FT%T')
work_dir="$opt_work_dir/$ts"
dest_dir="$opt_dest_dir/$ts"

test -d "$work_dir" &&
    die 1 "working directory $work_dir already exists."\
	"is another instance already running?"

test -d "$dest_dir" &&
    die 1 "dest directory $dest_dir already exists."\
	"is another instance already running?"

mkdir -p "$work_dir" "$dest_dir"
cd "$work_dir"

repositories=$(
    find "$opt_source_dir" -type d -name .git |
    sed -e 's/\/\.git$//'
)

for r in $repositories; do
    basename=$(basename $r)
    git clone --quiet --no-hardlinks $r $basename
    tar cfz "$basename.tgz" $basename
    cp -p "$basename.tgz" $dest_dir
    # TODO remove the bare clone
#    rm -fr $basename
done
